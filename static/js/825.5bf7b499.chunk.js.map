{"version":3,"file":"static/js/825.5bf7b499.chunk.js","mappings":"oIAGA,MAAMA,GAAeC,E,QAAAA,IAAOC,EAAAA,GAAO;;;;;;YAMtBC,GAAWA,EAAMC;aAChBD,GAAWA,EAAME;eCR/B,MAIA,EAJiBC,IAA0C,IAAzC,QAAEC,EAAO,MAAEH,EAAK,OAAEC,EAAM,QAAEG,GAASF,EACjD,OAAOG,EAAAA,EAAAA,KAACT,EAAY,CAACQ,QAASA,IAAMA,IAAWJ,MAAOA,EAAOC,OAAQA,EAAOK,SAAEH,GAAuB,C,gDCAzG,MAAMI,GAAcV,E,QAAAA,IAAOW,EAAAA,EAAM;;;;eCDjC,MAIA,EAJgBN,IAAsD,IAArD,YAAEO,EAAW,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,EAAI,GAAEC,EAAE,MAACC,GAAOZ,EAC5D,OAAOG,EAAAA,EAAAA,KAACE,EAAW,CAACO,MAAOA,EAAOF,KAAMA,EAAMC,GAAIA,EAAIH,SAAUA,EAAUC,KAAMA,EAAMF,YAAaA,EAAaM,QAAQ,UAAW,C,2FCCvI,MAAMC,GAAanB,EAAAA,EAAAA,IAAOoB,EAAAA,EAAK;;;;;;;;;;;;yBAYNC,EAAAA,EAAKC;;;;EAMxBC,EAAiBvB,EAAAA,GAAOwB,GAAG;;;;;;;uBAOVH,EAAAA,EAAKC;;;EAKtBG,EAAczB,EAAAA,GAAOwB,GAAG;;;;;;;6CChC9B,MAMA,EAN8BE,EAAAA,KAAaC,MAAM,CAC7CX,GAAGU,EAAAA,KAAaE,SAAS,2BACzBb,KAAKW,EAAAA,KAAaE,SAAS,6B,+DCQ/B,MA+CA,EA/CcC,KACV,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GACjCC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXrB,GAAI,GACJD,KAAM,IAEVuB,iBAAkBC,EAClBC,SAAUC,IACNV,GAAW,IACXW,EAAAA,EAAAA,IAAsBC,EAAAA,EAAOF,GAC7BG,YAAW,KACPX,EAAS,cACTF,GAAW,EAAM,GAClB,IAAK,KAIhBc,EAAAA,EAAAA,YAAU,KACNd,GAAW,GACXe,GAAsB,GACvB,IAEH,MAAMA,EAAuBA,KACzB,MAAMC,GAAOC,EAAAA,EAAAA,IAAsBL,EAAAA,IAC9BM,EAAAA,EAAAA,SAAQF,IACTd,EAAS,cAEbF,GAAW,EAAM,EAGrB,OACImB,EAAAA,EAAAA,MAAC3B,EAAc,CAAAd,SAAA,EACXD,EAAAA,EAAAA,KAAC2C,EAAAA,EAAS,CAACC,KAAMtB,KACjBoB,EAAAA,EAAAA,MAAC/B,EAAU,CAAAV,SAAA,EACPD,EAAAA,EAAAA,KAACiB,EAAW,CAAAhB,SAAC,WAGbD,EAAAA,EAAAA,KAAC6C,EAAAA,EAAO,CAACtC,KAAK,KAAKC,GAAG,KAAKH,SAAUsB,EAAOmB,aAAc1C,YAAY,QACtEJ,EAAAA,EAAAA,KAAC6C,EAAAA,EAAO,CAACtC,KAAK,OAAOC,GAAG,OAAOH,SAAUsB,EAAOmB,aAAc1C,YAAY,UAC1EJ,EAAAA,EAAAA,KAAC+C,EAAAA,EAAQ,CAAChD,QAAS4B,EAAOqB,aAAclD,QAAQ,QAAQH,MAAM,OAAOC,OAAO,cAEnE,C,kCCvDlB,MAAMiB,EAAO,CAChBC,OAAQ,QACRmC,OAAQ,QACRC,OAAQ,SACRC,QAAS,S","sources":["components/FAButton/FAButtonStyle.js","components/FAButton/FAButton.js","components/FAInput/FAInputStyles.js","components/FAInput/FAInput.js","modules/login/loginStyle.js","modules/login/loginValidationSchema.js","modules/login/Login.js","styles/constants.js"],"sourcesContent":["import { Button } from \"antd\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled(Button)`\n   background: #5285EC 0% 0% no-repeat padding-box;\n   border-radius: 8px;\n   border-color: #5285EC;\n   opacity: 1;\n   color: #FFFFFF;\n   width: ${(props) => (props.width)};\n   height: ${(props) => (props.height)};\n`\n\nexport {\n    StyledButton\n}","import { StyledButton } from \"./FAButtonStyle\"\n\nconst FAButton = ({ btnText, width, height, onClick }) => {\n    return <StyledButton onClick={() => onClick()} width={width} height={height}>{btnText}</StyledButton>\n}\n\nexport default FAButton;","import { Input } from \"antd\";\nimport styled from \"styled-components\";\n\nconst StyledInput = styled(Input)`\n    margin-bottom: 12px;\n    border-radius: 8px;\n    height: 40px;\n`\n\nexport {\n    StyledInput\n}","import { StyledInput } from \"./FAInputStyles\";\n\nconst FAInput = ({ placeholder, onChange, type, name, id,value }) => {\n    return <StyledInput value={value} name={name} id={id} onChange={onChange} type={type} placeholder={placeholder} variant=\"filled\" />\n}\n\nexport default FAInput","import styled from \"styled-components\";\nimport { Card } from \"antd\";\nimport { size } from \"../../styles/constants\";\n\nconst StyledCard = styled(Card)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: 0px 3px 6px #00000029;\n    border-radius: 12px;\n    opacity: 1;\n    width: 350px;\n    padding-right: 4px;\n    padding-bottom: 9px;\n\n    @media (max-width: ${size.mobile}) {\n        max-width: 100%;\n        text-align: center;\n    }\n`\n\nconst LoginContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh; \n    font-family: 'Montserrat';\n\n  @media (max-width: ${size.mobile}) {\n    padding: 0 10px; \n  }\n`\n\nconst LoginHeader = styled.div`\n    text-align: left;\n    letter-spacing: 0px;\n    color: #537178;\n    opacity: 1;\n    font-size: 20px;\n    margin-bottom: 24px;\n`\n\nexport {\n    StyledCard,\n    LoginContainer,\n    LoginHeader\n}","import * as Yup from 'yup'\n\nconst loginValidationSchema = Yup.object().shape({\n    id:Yup.string().required(\"This Feild is Required!\"),\n    name:Yup.string().required(\"This Feild is Required!\")\n})\n\n\nexport default loginValidationSchema","import React, { useEffect, useState } from \"react\";\nimport { LoginContainer, LoginHeader, StyledCard } from \"./loginStyle\";\nimport { useFormik } from 'formik';\nimport FAInput from \"../../components/FAInput/FAInput\";\nimport FAButton from \"../../components/FAButton/FAButton\";\nimport loginValidationSchema from \"./loginValidationSchema\";\nimport { getSessionStorageData, setSessionStorageData } from \"../../utility/localStorageUtility\";\nimport { isEmpty } from \"lodash\";\nimport FALoading from \"../../components/FALoading/FALoading\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LOGIN } from \"../../utility/constants\";\n\nconst Login = () => {\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n    const formik = useFormik({\n        initialValues: {\n            id: '',\n            name: '',\n        },\n        validationSchema: loginValidationSchema,\n        onSubmit: values => {\n            setLoading(true)\n            setSessionStorageData(LOGIN, values)\n            setTimeout(() => {\n                navigate(\"/dashboard\")\n                setLoading(false)\n            }, 1000)\n        },\n    });\n\n    useEffect(() => {\n        setLoading(true)\n        checkLoginDataExists()\n    }, [])\n\n    const checkLoginDataExists = () => {\n        const data = getSessionStorageData(LOGIN)\n        if (!isEmpty(data)) {\n            navigate(\"/dashboard\")\n        }\n        setLoading(false);\n    }\n\n    return (\n        <LoginContainer >\n            <FALoading open={loading} />\n            <StyledCard >\n                <LoginHeader>\n                    Login\n                </LoginHeader>\n                <FAInput name=\"id\" id=\"id\" onChange={formik.handleChange} placeholder=\"Id\" />\n                <FAInput name=\"name\" id=\"name\" onChange={formik.handleChange} placeholder=\"Name\" />\n                <FAButton onClick={formik.handleSubmit} btnText=\"Login\" width=\"100%\" height=\"40px\" />\n            </StyledCard>\n        </LoginContainer>\n    )\n}\n\nexport default Login;","export const size = {\n    mobile: \"576px\",\n    tablet: \"992px\",\n    laptop: \"1024px\",\n    desktop: \"2560px\",\n  }"],"names":["StyledButton","styled","Button","props","width","height","_ref","btnText","onClick","_jsx","children","StyledInput","Input","placeholder","onChange","type","name","id","value","variant","StyledCard","Card","size","mobile","LoginContainer","div","LoginHeader","Yup","shape","required","Login","loading","setLoading","useState","navigate","useNavigate","formik","useFormik","initialValues","validationSchema","loginValidationSchema","onSubmit","values","setSessionStorageData","LOGIN","setTimeout","useEffect","checkLoginDataExists","data","getSessionStorageData","isEmpty","_jsxs","FALoading","open","FAInput","handleChange","FAButton","handleSubmit","tablet","laptop","desktop"],"sourceRoot":""}